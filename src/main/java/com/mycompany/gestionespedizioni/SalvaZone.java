/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.gestionespedizioni;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author caggi
 */
public class SalvaZone extends Thread {

    Connection conn = null;
    String url = "jdbc:postgresql://localhost/gestioneSpedizioni";
    String user = "postgres";
    String pass = "root";

    private Boolean b=false;

    private String loc;
    private String cap;

    private String nome;
    private String cognome;
    private String dn;

    public Boolean getB() {
        return b;
    }

    public void setB(Boolean b) {
        this.b = b;
    }

    public String getLoc() {
        return loc;
    }

    public void setLoc(String loc) {
        this.loc = loc;
    }

    public String getCap() {
        return cap;
    }

    public void setCap(String cap) {
        this.cap = cap;
    }

    public String getNome() {
        return nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    public String getCognome() {
        return cognome;
    }

    public void setCognome(String cognome) {
        this.cognome = cognome;
    }

    public String getDn() {
        return dn;
    }

    public void setDn(String dn) {
        this.dn = dn;
    }

    public void creaTab(String nome, String cognome, String dn) {
        String data=dn.replaceAll("-", "");
        String nomeTab = (nome + cognome + data).replaceAll(" ", "");
        String query = "CREATE TABLE IF NOT EXISTS " + nomeTab + " ("
                + "id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
                + "cap text NOT NULL,"
                + "loc text NOT NULL"
                + ");";

        try {
            conn = DriverManager.getConnection(url, user, pass);
            Statement state = conn.createStatement();
            state.executeUpdate(query);
            conn.close();
        } catch (SQLException sql) {
            Err e = new Err();
            e.setMsgtxt("DB ERROR. ERROR CODE " + sql.getErrorCode() + ", SQL STATE " + sql.getSQLState());
            e.setVisible(true);
        }
    }

    public void salva(String nome, String cognome, String dn, String loc, String cap) {
        String data=dn.replaceAll("-", "");
        String nomeTab = (nome + cognome + data).replaceAll(" ", "");
        String query = "INSERT INTO " + nomeTab + " (cap,loc) VALUES (?,?)";

        try {
            conn = DriverManager.getConnection(url, user, pass);

            PreparedStatement state = conn.prepareStatement(query);

            state.setString(1, cap);
            state.setString(2, loc);
            state.executeUpdate();
            conn.close();
        } catch (SQLException sql) {
            Err e = new Err();
            e.setMsgtxt("DB ERROR. ERROR CODE " + sql.getErrorCode() + ", SQL STATE " + sql.getSQLState());
            e.setVisible(true);
        }
    }

    public void run() {

        this.creaTab(this.getNome(), this.getCognome(), this.getDn());

        if (this.getB()) {
            this.salva(this.getNome(), this.getCognome(), this.getDn(), this.getLoc(), this.getCap());
        }

    }

}
