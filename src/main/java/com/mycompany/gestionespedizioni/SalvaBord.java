/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.gestionespedizioni;

import java.util.ArrayList;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author caggi
 */
public class SalvaBord extends Thread {

    Connection conn = null;
    String url = "jdbc:postgresql://localhost/gestioneSpedizioni";
    String user = "postgres";
    String pass = "root";

    private String cognome;
    private String nome;
    private ArrayList<Bordero> ab = new ArrayList<>();
    private Autisti a;
    private Macchina m;
    private Spedizioni s;

    public void setM(Macchina m) {
        this.m = m;
    }

    public Macchina getM() {
        return m;
    }

    public Autisti getA() {
        return a;
    }

    public void setA(Autisti a) {
        this.a = a;
    }

    public Spedizioni getS() {
        return s;
    }

    public void setS(Spedizioni s) {
        this.s = s;
    }

    public String getCognome() {
        return cognome;
    }

    public void setCognome(String cognome) {
        this.cognome = cognome;
    }

    public String getNome() {
        return nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    public ArrayList<Bordero> getAb() {
        return ab;
    }

    public void setAb(ArrayList<Bordero> ab) {
        this.ab = ab;
    }

    public void salvaBord(ArrayList<Bordero> b) {
        Integer dim = b.size();

        //eliminazione di tutte le tabelle
        for (Integer j = 0; j < dim; j++) {
            String nome = (b.get(j).getA().getCognome().toLowerCase() + b.get(j).getA().getNome().toLowerCase()).replaceAll(" ", ""), targa = b.get(j).getM().getTarga().toLowerCase(), data = b.get(j).getS().getDataCons().replaceAll("-", "");
            this.dropTab(nome, targa, data);
        }

        for (Integer i = 0; i < dim; i++) {
            String nome = (b.get(i).getA().getCognome().toLowerCase() + b.get(i).getA().getNome().toLowerCase()).replaceAll(" ", ""), targa = b.get(i).getM().getTarga().toLowerCase(), data = b.get(i).getS().getDataCons().replaceAll("-", "");
            //this.dropTab(nome, targa, data);
            this.creaTab(nome, targa, data);

            //salvataggio 
            String query = "INSERT INTO bord_" + nome + targa + data + " (idsped) VALUES (?)";

            try {
                conn = DriverManager.getConnection(url, user, pass);

                PreparedStatement state = conn.prepareStatement(query);

                state.setInt(1, Integer.parseInt(b.get(i).getS().getId()));
                state.executeUpdate();
                //System.out.println(state.toString());
                conn.close();
            } catch (SQLException sql) {
                Err e = new Err();
                e.setMsgtxt("DB ERROR. ERROR CODE " + sql.getErrorCode() + ", SQL STATE " + sql.getSQLState());
                e.setVisible(true);
            }
        }
    }

    private void creaTab(String nome, String targa, String data) {
        String query = "CREATE TABLE IF NOT EXISTS bord_" + nome + targa + data + " ("
                + "id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
                + "idsped integer NOT NULL"
                + ");";
        try {
            conn = DriverManager.getConnection(url, user, pass);

            Statement state = conn.createStatement();
            state.executeUpdate(query);
            conn.close();
        } catch (SQLException sql) {
            Err e = new Err();
            e.setMsgtxt("DB ERROR. ERROR CODE " + sql.getErrorCode() + ", SQL STATE " + sql.getSQLState());
            e.setVisible(true);
        }
    }

    private void dropTab(String nome, String targa, String data) {
        String query = "DROP TABLE IF EXISTS bord_" + nome + targa + data;
        try {
            conn = DriverManager.getConnection(url, user, pass);

            Statement state = conn.createStatement();
            state.executeUpdate(query);
            conn.close();
        } catch (SQLException sql) {
            Err e = new Err();
            e.setMsgtxt("DB ERROR. ERROR CODE " + sql.getErrorCode() + ", SQL STATE " + sql.getSQLState());
            e.setVisible(true);
        }
    }

    public void run() {
        Integer dim = this.getAb().size();
        //System.out.println(this.getAb());
        //for(Integer i=0;i<dim;i++){
        this.salvaBord(this.getAb());
        //}
    }
}
